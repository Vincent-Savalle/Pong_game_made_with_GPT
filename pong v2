<!DOCTYPE html>
<html>
<head>
  <title>Pong</title>
</head>
<body>
    <center>
        <canvas id="pong" width="600" height="400" style="border: 1px solid black"></canvas>
        <div>
            <button id="play-button">PLAY</button>
            <button id="pause-button">PAUSE</button>
        </div>
    </center>
    
  <script>

    // Définir l'état du jeu (en cours d'exécution ou en pause)
    var gameRunning = false;

    // Définir les variables pour la boucle d'animation
    var animationFrame;

    // Obtenir le canvas et le contexte
    var canvas = document.getElementById('pong');
    var ctx = canvas.getContext('2d');

    // Définir les dimensions du terrain de jeu
    var gameWidth = canvas.width;
    var gameHeight = canvas.height;

    // Définir la position initiale de la balle
    var ballX = gameWidth / 2;
    var ballY = gameHeight / 2;

    // Définir la vitesse de la balle
    var ballSpeedX = 1;
    var ballSpeedY = 1;

    // Définir les dimensions des raquettes
    var paddleWidth = 10;
    var paddleHeight = 75;

    // Définir la position initiale des raquettes
    var player1Y = (gameHeight - paddleHeight) / 2;
    var player2Y = (gameHeight - paddleHeight) / 2;

    // Définir la vitesse des raquettes
    var paddleSpeed = 0;

    // Définir les scores
    var player1Score = 0;
    var player2Score = 0;

    // Définir le temps restant avant la fin du timer (en secondes)
    var timeRemaining = 60;

    // Définir un intervalle d'une seconde pour mettre à jour le temps restant
    var interval = setInterval(function() {
    timeRemaining--;
    }, 1000);

    // Définir la fonction pour lancer l'animation
    function play() {
        if (!gameRunning) {
        gameRunning = true;
        console.log("fonction play");
        animationFrame = requestAnimationFrame(animate);
        // Démarrer l'intervalle
        interval = setInterval(function() {
        timeRemaining--;
        }, 1000);
        }
    }

    // Définir la fonction pour mettre en pause l'animation
    function pause() {
        gameRunning = false;
        console.log("fonction pause");
        cancelAnimationFrame(animationFrame);
        // Arrêter l'intervalle
        clearInterval(interval);
    }

    function timer0() {
        
    }

    // Gérer les clics sur les boutons
    document.getElementById("play-button").addEventListener("click", play);
    document.getElementById("pause-button").addEventListener("click", pause);

    // Définir les fonctions de dessin
    function drawRect(x, y, w, h, color) {
        ctx.fillStyle = color;
        ctx.fillRect(x, y, w, h);
    }

    function drawCircle(x, y, r, color) {
        ctx.fillStyle = color;
        ctx.beginPath();
        ctx.arc(x, y, r, 0, Math.PI * 2, true);
        ctx.closePath();
        ctx.fill();
    }

    function drawText(text, x, y, color) {
      ctx.fillStyle = color;
      ctx.font = "20px sans-serif";
      ctx.fillText(text, x, y);
      // Afficher le temps restant avant la fin du timer
      ctx.fillText(timeRemaining, gameWidth / 2, 30);
    }

    // Définir la fonction d'animation principale
    function animate() {
        console.log("animate");
      // Effacer l'écran
      drawRect(0, 0, gameWidth, gameHeight, "black");

      // Dessiner la balle
      drawCircle(ballX, ballY, 5, "white");

      // Dessiner les raquettes
      drawRect(0, player1Y, paddleWidth, paddleHeight, "white");
      drawRect(gameWidth - paddleWidth, player2Y, paddleWidth, paddleHeight, "white");

      // Dessiner les scores
      drawText(player1Score, gameWidth / 4, 30, "white");
      drawText(player2Score, 3 * gameWidth / 4, 30, "white");

      // Limiter la vitesse de la balle
      if (Math.abs(ballSpeedX) > 7) {
      ballSpeedX = ballSpeedX > 0 ? 7 : -7;
      }
      if (Math.abs(ballSpeedY) > 7) {
      ballSpeedY = ballSpeedY > 0 ? 7 : -7;
      }

      // Déplacer la balle
      ballX += ballSpeedX;
      ballY += ballSpeedY;

      // Vérifier si la balle touche les bords du terrain de jeu
      if (ballY < 0 || ballY > gameHeight) {
        ballSpeedY = -ballSpeedY;
      }

      // Vérifier si la balle touche une raquette
      if (ballX < paddleWidth) {
        if (ballY > player1Y && ballY < player1Y + paddleHeight) {
          ballSpeedX = -ballSpeedX;
        } else {
          // Player 2 marque un point
          player2Score++;
          ballX = gameWidth / 2;
          ballY = gameHeight / 2;
           ballSpeedX+0.2; ballSpeedY+0.2;
        }
      }

      if (ballX > gameWidth -paddleWidth) {
        if (ballY > player2Y && ballY < player2Y + paddleHeight) {
          ballSpeedX = -ballSpeedX;
        } else {
          // Player 1 marque un point
          player1Score++;
          ballX = gameWidth / 2;
          ballY = gameHeight / 2;
          ballSpeedX+0.2; ballSpeedY+0.2;
        }
      }

       // Déplacer les raquettes
       player1Y += paddleSpeed;
      if (player1Y < 0) {
        player1Y = 0;
        paddleSpeed = 0;
      } else if (player1Y > gameHeight - paddleHeight) {
        player1Y = gameHeight - paddleHeight;
        paddleSpeed = 0;
      }
      player2Y += paddleSpeed;
      if (player2Y < 0) {
        player2Y = 0;
        paddleSpeed = 0;
      } else if (player2Y > gameHeight - paddleHeight) {
        player2Y = gameHeight - paddleHeight;
        paddleSpeed = 0;
      }

      // Gérer les entrées clavier
      document.addEventListener("keydown", function(event) {
        if (event.keyCode === 38) {
          paddleSpeed = -5;
        } else if (event.keyCode === 40) {
          paddleSpeed = 5;
        }
      });

      if (timeRemaining==0){
        cancelAnimationFrame(animationFrame);
        clearInterval(interval);
      } else {
      animationFrame = requestAnimationFrame(animate);
      }
    }

    // Démarrer l'animation
    animate();
    
  </script>
</body>
</html>


